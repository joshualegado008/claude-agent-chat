version: '3.8'

services:
  # PostgreSQL for conversation metadata and full history
  postgres:
    image: postgres:16-alpine
    container_name: agent-chat-postgres
    environment:
      POSTGRES_DB: agent_conversations
      POSTGRES_USER: agent_user
      POSTGRES_PASSWORD: agent_pass_local
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./metadata_schema.sql:/docker-entrypoint-initdb.d/02-metadata.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agent_user -d agent_conversations"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Qdrant for semantic search (vector database)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: agent-chat-qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  default:
    name: agent-chat-network
